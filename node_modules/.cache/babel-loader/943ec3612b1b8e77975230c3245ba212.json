{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nimport GameCharacter from './GameCharacter';\nimport GameObjectTypes from '../shared/enum/GameObjectTypes';\nimport { action, observable } from 'mobx';\nimport directions from '../shared/enum/directions';\nimport sortBy from 'lodash/sortBy';\nvar WALK_SPEED = 2.4;\nvar TARGET_OFFSET = -10;\nvar FootEnemy = (_class = (_temp = /*#__PURE__*/function (_GameCharacter) {\n  _inherits(FootEnemy, _GameCharacter);\n\n  function FootEnemy(props) {\n    var _this;\n\n    _classCallCheck(this, FootEnemy);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FootEnemy).call(this, props));\n    _this.type = GameObjectTypes.Enemy;\n    _this.animationTracks = {\n      walking: {\n        frames: [{\n          x: 42,\n          y: 20\n        }, {\n          x: 114,\n          y: 20\n        }, {\n          x: 184,\n          y: 20\n        }, {\n          x: 114,\n          y: 20\n        }],\n        duration: 700\n      },\n      attack: {\n        frames: [{\n          x: 42,\n          y: 405\n        }, {\n          x: 120,\n          y: 402,\n          width: 120\n        }, {\n          x: 42,\n          y: 20\n        }],\n        duration: 800\n      },\n      take_damage: {\n        frames: [{\n          x: 52,\n          y: 560\n        }],\n        duration: 1000\n      },\n      dead: {\n        frames: [{\n          x: 140,\n          y: 550,\n          width: 120\n        }],\n        duration: 1000\n      },\n      jump_kick: {\n        frames: [{\n          x: 35,\n          y: 200\n        }, {\n          x: 170,\n          y: 150,\n          width: 150\n        }],\n        loopStartFrame: 1,\n        introDuration: 200,\n        duration: 400\n      },\n      explode: {\n        frames: [{\n          x: 400,\n          y: 460\n        }, {\n          x: 490,\n          y: 450,\n          width: 100\n        }, {\n          x: 0,\n          y: 0,\n          width: 1\n        }],\n        loopStartFrame: 2,\n        introDuration: 200,\n        duration: 1000\n      }\n    };\n\n    _initializerDefineProperty(_this, \"spriteScale\", _descriptor, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"spriteUrl\", _descriptor2, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionWidth\", _descriptor3, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"screenWidth\", _descriptor4, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"screenHeight\", _descriptor5, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionHeight\", _descriptor6, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionBottom\", _descriptor7, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionDepth\", _descriptor8, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.longRangeAttackChance = 0.15;\n    _this.longRangeAttackTimeout = 2000;\n    _this.jumpKickVelocity = {\n      x: 6,\n      y: 10,\n      z: 0\n    };\n    _this.shortAttackRange = [0, 10];\n    _this.longAttackRange = [20, 300];\n\n    _this.distToMe = function (player) {\n      var _this$position = _this.position,\n          x = _this$position.x,\n          z = _this$position.z;\n      return Math.pow(player.position.x - x, 2) + Math.pow(player.position.z - z, 2);\n    };\n\n    _initializerDefineProperty(_this, \"explode\", _descriptor9, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.lastLongRangeAttackConsideredAt = 0;\n\n    _this.setAnimation('walking');\n\n    return _this;\n  }\n\n  _createClass(FootEnemy, [{\n    key: \"updateTargetedPlayer\",\n    value: function updateTargetedPlayer() {\n      var playersByDistanceSquared = sortBy(this.gameState.players.filter(function (p) {\n        return !p.isDead;\n      }), this.distToMe);\n\n      if (!playersByDistanceSquared.length) {\n        return;\n      }\n\n      if (!this.targetedPlayer || this.targetedPlayer.isDead) {\n        this.targetedPlayer = playersByDistanceSquared[0];\n      } else if (this.distToMe(this.targetedPlayer) / this.distToMe(playersByDistanceSquared[0]) >= 2) {\n        //If a new target is twice as close as the existing target\n        this.targetedPlayer = playersByDistanceSquared[0];\n      }\n    }\n  }, {\n    key: \"getTargetPosition\",\n    value: function getTargetPosition() {\n      var x;\n\n      if (this.position.x < this.targetedPlayer.position.x) {\n        this.direction = directions.right;\n        x = this.targetedPlayer.position.x - this.collisionWidth + -TARGET_OFFSET;\n      } else if (this.position.x > this.targetedPlayer.position.x) {\n        this.direction = directions.left;\n        x = this.targetedPlayer.position.x + this.targetedPlayer.collisionWidth + TARGET_OFFSET;\n      }\n\n      return {\n        x: x,\n        z: this.targetedPlayer.position.z\n      };\n    }\n  }, {\n    key: \"moveTowardsTargetedPlayer\",\n    value: function moveTowardsTargetedPlayer() {\n      this.setAnimation('walking');\n      var target = this.getTargetPosition();\n      var reachedTargetBuffer = 10;\n\n      if (this.position.x < target.x - reachedTargetBuffer) {\n        this.velocity.x = WALK_SPEED;\n      } else if (this.position.x > target.x + reachedTargetBuffer) {\n        this.velocity.x = -WALK_SPEED;\n      } else {\n        this.velocity.x = 0;\n      }\n\n      if (this.position.z < target.z - reachedTargetBuffer) {\n        this.velocity.z = WALK_SPEED;\n      } else if (this.position.z > target.z + reachedTargetBuffer) {\n        this.velocity.z = -WALK_SPEED;\n      } else {\n        this.velocity.z = 0;\n      }\n    }\n  }, {\n    key: \"xDistanceToTarget\",\n    value: function xDistanceToTarget() {\n      return Math.abs(this.getTargetPosition().x - this.position.x);\n    }\n  }, {\n    key: \"shouldDoLongRangeAttack\",\n    value: function shouldDoLongRangeAttack() {\n      var now = performance.now();\n      var xDistance = this.xDistanceToTarget();\n\n      if (this.lastLongRangeAttackConsideredAt + this.longRangeAttackTimeout < now) {\n        this.lastLongRangeAttackConsideredAt = now;\n        return Math.random() <= this.longRangeAttackChance && xDistance >= this.longAttackRange[0] && xDistance <= this.longAttackRange[1] && this.velocity.z === 0;\n      }\n    }\n  }, {\n    key: \"shouldDoShortRangeAttack\",\n    value: function shouldDoShortRangeAttack() {\n      var xDistance = this.xDistanceToTarget();\n      return xDistance >= this.shortAttackRange[0] && xDistance <= this.shortAttackRange[1] && this.velocity.z === 0;\n    }\n  }, {\n    key: \"doShortRangeAttack\",\n    value: function doShortRangeAttack() {\n      this.attack('attack', 350);\n    }\n  }, {\n    key: \"doLongRangeAttack\",\n    value: function doLongRangeAttack() {\n      this.setAnimation('jump_kick');\n      this.setFreefall({\n        x: this.direction === directions.right ? this.jumpKickVelocity.x : -this.jumpKickVelocity.x,\n        y: this.jumpKickVelocity.y,\n        z: this.jumpKickVelocity.z\n      }, 1);\n    }\n  }, {\n    key: \"stepMovement\",\n    value: function stepMovement(deltaTime) {\n      this.updateTargetedPlayer();\n      this.moveTowardsTargetedPlayer(); // Short-range attack takes precedence over long-range attack\n\n      if (this.shouldDoShortRangeAttack()) {\n        this.doShortRangeAttack();\n      } else if (this.shouldDoLongRangeAttack()) {\n        this.doLongRangeAttack();\n      }\n\n      _get(_getPrototypeOf(FootEnemy.prototype), \"stepMovement\", this).call(this, deltaTime);\n    }\n  }, {\n    key: \"onReturnToGround\",\n    value: function onReturnToGround() {\n      if (this.isDead) {\n        setTimeout(this.explode, 500);\n      }\n\n      _get(_getPrototypeOf(FootEnemy.prototype), \"onReturnToGround\", this).call(this);\n    }\n  }]);\n\n  return FootEnemy;\n}(GameCharacter), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"spriteScale\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '3200px';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"spriteUrl\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '/assets/images/gameObjects/enemy.png';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"collisionWidth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 64;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"screenWidth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 68;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"screenHeight\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 132;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"collisionHeight\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 90;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"collisionBottom\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 20;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"collisionDepth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 30;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"moveTowardsTargetedPlayer\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"moveTowardsTargetedPlayer\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"doShortRangeAttack\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"doShortRangeAttack\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"doLongRangeAttack\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"doLongRangeAttack\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"stepMovement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"stepMovement\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onReturnToGround\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onReturnToGround\"), _class.prototype), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"explode\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      _this2.setAnimation('explode');\n    };\n  }\n})), _class);\nexport default FootEnemy;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Crane/Capstone-Crane/src/state/FootEnemy.js"],"names":["GameCharacter","GameObjectTypes","action","observable","directions","sortBy","WALK_SPEED","TARGET_OFFSET","FootEnemy","props","type","Enemy","animationTracks","walking","frames","x","y","duration","attack","width","take_damage","dead","jump_kick","loopStartFrame","introDuration","explode","longRangeAttackChance","longRangeAttackTimeout","jumpKickVelocity","z","shortAttackRange","longAttackRange","distToMe","player","position","Math","pow","lastLongRangeAttackConsideredAt","setAnimation","playersByDistanceSquared","gameState","players","filter","p","isDead","length","targetedPlayer","direction","right","collisionWidth","left","target","getTargetPosition","reachedTargetBuffer","velocity","abs","now","performance","xDistance","xDistanceToTarget","random","setFreefall","deltaTime","updateTargetedPlayer","moveTowardsTargetedPlayer","shouldDoShortRangeAttack","doShortRangeAttack","shouldDoLongRangeAttack","doLongRangeAttack","setTimeout"],"mappings":"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","sourcesContent":["import GameCharacter from './GameCharacter'\r\nimport GameObjectTypes from '../shared/enum/GameObjectTypes'\r\nimport { action, observable } from 'mobx'\r\nimport directions from '../shared/enum/directions'\r\nimport sortBy from 'lodash/sortBy'\r\n\r\nconst WALK_SPEED = 2.4\r\n\r\nconst TARGET_OFFSET = -10\r\n\r\nclass FootEnemy extends GameCharacter {\r\n\r\n  type = GameObjectTypes.Enemy\r\n\r\n  animationTracks = {\r\n    walking: {\r\n      frames: [\r\n        { x: 42, y: 20 },\r\n        { x: 114, y: 20 },\r\n        { x: 184, y: 20 },\r\n        { x: 114, y: 20 },\r\n      ],\r\n      duration: 700,\r\n    },\r\n    attack: {\r\n      frames: [\r\n        { x: 42, y: 405 },\r\n        { x: 120, y: 402, width: 120 },\r\n        { x: 42, y: 20 },\r\n      ],\r\n      duration: 800,\r\n    },\r\n    take_damage: {\r\n      frames: [{ x: 52, y: 560 }],\r\n      duration: 1000\r\n    },\r\n    dead: {\r\n      frames: [{ x: 140, y: 550, width: 120 }],\r\n      duration: 1000\r\n    },\r\n    jump_kick: {\r\n      frames: [\r\n        { x: 35, y: 200 },\r\n        { x: 170, y: 150, width: 150 },\r\n      ],\r\n      loopStartFrame: 1,\r\n      introDuration: 200,\r\n      duration: 400,\r\n    },\r\n    explode: {\r\n      frames: [\r\n        { x: 400, y: 460 },\r\n        { x: 490, y: 450, width: 100 },\r\n        { x: 0, y: 0, width: 1 },\r\n      ], \r\n      loopStartFrame: 2,\r\n      introDuration: 200,\r\n      duration: 1000,\r\n    }\r\n  }\r\n\r\n  @observable \r\n  spriteScale = '3200px'\r\n\r\n  @observable\r\n  spriteUrl = '/assets/images/gameObjects/enemy.png'\r\n\r\n  @observable\r\n  collisionWidth = 64\r\n\r\n  @observable\r\n  screenWidth = 68\r\n\r\n  @observable\r\n  screenHeight = 132\r\n\r\n  @observable\r\n  collisionHeight = 90\r\n\r\n  @observable\r\n  collisionBottom = 20\r\n\r\n  @observable\r\n  collisionDepth = 30\r\n\r\n  longRangeAttackChance = 0.15\r\n\r\n  longRangeAttackTimeout = 2000\r\n\r\n  jumpKickVelocity = { x: 6, y: 10, z: 0 }\r\n\r\n  shortAttackRange = [ 0, 10 ]\r\n\r\n  longAttackRange = [ 20, 300 ]\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.lastLongRangeAttackConsideredAt = 0\r\n    this.setAnimation( 'walking' )\r\n  }\r\n\r\n  distToMe = ( player ) => {\r\n    const { x, z } = this.position\r\n    return Math.pow( player.position.x - x, 2) + Math.pow(player.position.z - z, 2 )\r\n  }\r\n\r\n  updateTargetedPlayer() {\r\n    const playersByDistanceSquared = sortBy( this.gameState.players.filter( p => !p.isDead ), this.distToMe )\r\n    if ( !playersByDistanceSquared.length ) {\r\n      return\r\n    }\r\n\r\n    if ( !this.targetedPlayer || this.targetedPlayer.isDead ) {\r\n      this.targetedPlayer = playersByDistanceSquared[0]\r\n    }\r\n    else if ( this.distToMe(this.targetedPlayer ) / this.distToMe( playersByDistanceSquared[0] ) >= 2) { //If a new target is twice as close as the existing target\r\n      this.targetedPlayer = playersByDistanceSquared[0]\r\n    }\r\n  }\r\n\r\n  getTargetPosition() {\r\n    let x;\r\n    if ( this.position.x < this.targetedPlayer.position.x ) {\r\n      this.direction = directions.right\r\n      x = this.targetedPlayer.position.x - this.collisionWidth +  - TARGET_OFFSET\r\n    }\r\n    else if ( this.position.x > this.targetedPlayer.position.x ) {\r\n      this.direction = directions.left\r\n      x = this.targetedPlayer.position.x + this.targetedPlayer.collisionWidth + TARGET_OFFSET\r\n    }\r\n\r\n    return {\r\n      x,\r\n      z: this.targetedPlayer.position.z\r\n    }\r\n  }\r\n\r\n  @action\r\n  moveTowardsTargetedPlayer() {\r\n    this.setAnimation( 'walking' )\r\n    const target = this.getTargetPosition()\r\n    const reachedTargetBuffer = 10\r\n\r\n    if ( this.position.x < target.x - reachedTargetBuffer ) {\r\n      this.velocity.x = WALK_SPEED\r\n    }\r\n    else if ( this.position.x > target.x + reachedTargetBuffer ) {\r\n      this.velocity.x = -WALK_SPEED\r\n    }\r\n    else {\r\n      this.velocity.x = 0\r\n    }\r\n\r\n    if ( this.position.z < target.z - reachedTargetBuffer ) {\r\n      this.velocity.z = WALK_SPEED\r\n    }\r\n    else if ( this.position.z > target.z + reachedTargetBuffer ) {\r\n      this.velocity.z = -WALK_SPEED\r\n    }\r\n    else {\r\n      this.velocity.z = 0\r\n    }\r\n  }\r\n\r\n  xDistanceToTarget() {\r\n    return Math.abs( this.getTargetPosition().x - this.position.x )\r\n  }\r\n\r\n  shouldDoLongRangeAttack() {\r\n    const now = performance.now()\r\n    const xDistance = this.xDistanceToTarget()\r\n    if ( this.lastLongRangeAttackConsideredAt + this.longRangeAttackTimeout < now) {\r\n      this.lastLongRangeAttackConsideredAt = now\r\n\r\n      return (\r\n        Math.random() <= this.longRangeAttackChance &&\r\n        xDistance >= this.longAttackRange[ 0 ] && \r\n        xDistance <= this.longAttackRange[ 1 ] && \r\n        this.velocity.z === 0\r\n      )\r\n    }\r\n  }\r\n\r\n  shouldDoShortRangeAttack() {\r\n    const xDistance = this.xDistanceToTarget()\r\n\r\n    return (\r\n      xDistance >= this.shortAttackRange[ 0 ] && \r\n      xDistance <= this.shortAttackRange[ 1 ] && \r\n      this.velocity.z === 0\r\n    )\r\n  }\r\n\r\n  @action\r\n  doShortRangeAttack() {\r\n    this.attack( 'attack', 350 )\r\n  }\r\n\r\n  @action\r\n  doLongRangeAttack() {\r\n    this.setAnimation('jump_kick')\r\n    this.setFreefall({\r\n      x: this.direction === directions.right ? this.jumpKickVelocity.x : -this.jumpKickVelocity.x,\r\n      y: this.jumpKickVelocity.y,\r\n      z: this.jumpKickVelocity.z\r\n    }, 1)\r\n  }\r\n\r\n  @action\r\n  stepMovement( deltaTime ) {\r\n    this.updateTargetedPlayer()\r\n    this.moveTowardsTargetedPlayer()\r\n\r\n    // Short-range attack takes precedence over long-range attack\r\n    if ( this.shouldDoShortRangeAttack()) {\r\n      this.doShortRangeAttack()\r\n    }\r\n    else if ( this.shouldDoLongRangeAttack()) {\r\n      this.doLongRangeAttack()\r\n    }\r\n\r\n    super.stepMovement( deltaTime )\r\n  }\r\n\r\n  @action\r\n  onReturnToGround() {\r\n    if ( this.isDead ) {\r\n      setTimeout( this.explode, 500 )\r\n    }\r\n    super.onReturnToGround()\r\n  }\r\n\r\n  @action\r\n  explode = () => {\r\n    this.setAnimation( 'explode' )\r\n  }\r\n}\r\n\r\nexport default FootEnemy"]},"metadata":{},"sourceType":"module"}