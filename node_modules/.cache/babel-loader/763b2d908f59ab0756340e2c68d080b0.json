{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport GameCharacter from './GameCharacter';\nimport GameObjectTypes from '../shared/enum/GameObjectTypes';\nimport { action, observable } from 'mobx';\nimport directions from '../shared/enum/directions';\nvar WALK_SPEED = 3;\nvar JUMP_VELOCITY = 17;\nvar JUMP_KICK_XVEL = 8;\nvar STARTING_COURAGE = 12;\nvar Player = (_class = (_temp = /*#__PURE__*/function (_GameCharacter) {\n  _inherits(Player, _GameCharacter);\n\n  function Player(props) {\n    var _this;\n\n    _classCallCheck(this, Player);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, props));\n    _this.type = GameObjectTypes.Player;\n    _this.keyState = {\n      up: false,\n      down: false,\n      left: false,\n      right: false\n    };\n    _this.attackCount = 0;\n    _this.commonAnimationTracks = {\n      standing: {\n        frames: [{\n          x: 15,\n          y: 0\n        }],\n        duration: 1000\n      },\n      walking: {\n        frames: [{\n          x: 216,\n          y: 0\n        }, {\n          x: 280,\n          y: 0\n        }, {\n          x: 216,\n          y: 0\n        }, {\n          x: 154,\n          y: 0\n        }],\n        duration: 600\n      },\n      in_air: {\n        frames: [{\n          x: 358,\n          y: 0\n        }, {\n          x: 432,\n          y: 0\n        }, {\n          x: 500,\n          y: 0\n        }, {\n          x: 580,\n          y: 0\n        }, {\n          x: 655,\n          y: 0\n        }],\n        loopStartFrame: 1,\n        introDuration: 200,\n        duration: 400\n      },\n      take_damage: {\n        frames: [{\n          x: 25,\n          y: 300\n        }],\n        duration: 1000\n      },\n      jump_kick: {\n        frames: [{\n          x: 740,\n          y: 0,\n          width: 120\n        }],\n        duration: 1000\n      },\n      dead: {\n        frames: [{\n          x: 105,\n          y: 300,\n          width: 80\n        }],\n        duration: 1000\n      },\n      dead_ground: {\n        frames: [{\n          x: 180,\n          y: 290\n        }],\n        duration: 1000\n      }\n    };\n\n    _initializerDefineProperty(_this, \"spriteScale\", _descriptor, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"screenHeight\", _descriptor2, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"screenWidth\", _descriptor3, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionWidth\", _descriptor4, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionHeight\", _descriptor5, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionBottom\", _descriptor6, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"collisionDepth\", _descriptor7, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"courage\", _descriptor8, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.playerNumber = props.playerNumber;\n\n    _this.setAnimation('standing');\n\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: \"onRight\",\n    value: function onRight() {\n      this.keyState.right = true;\n      this.velocity.x = WALK_SPEED;\n    }\n  }, {\n    key: \"offRight\",\n    value: function offRight() {\n      this.keyState.right = false;\n      this.velocity.x = this.keyState.left ? -WALK_SPEED : 0;\n    }\n  }, {\n    key: \"onLeft\",\n    value: function onLeft() {\n      this.keyState.left = true;\n      this.velocity.x = -WALK_SPEED;\n    }\n  }, {\n    key: \"offLeft\",\n    value: function offLeft() {\n      this.keyState.left = false;\n      this.velocity.x = this.keyState.right ? WALK_SPEED : 0;\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp() {\n      this.keyState.up = true;\n      this.velocity.z = WALK_SPEED;\n    }\n  }, {\n    key: \"offUp\",\n    value: function offUp() {\n      this.keyState.up = false;\n      this.velocity.z = this.keyState.down ? -WALK_SPEED : 0;\n    }\n  }, {\n    key: \"onDown\",\n    value: function onDown() {\n      this.keyState.down = true;\n      this.velocity.z = -WALK_SPEED;\n    }\n  }, {\n    key: \"offDown\",\n    value: function offDown() {\n      this.keyState.down = false;\n      this.velocity.z = this.keyState.up ? WALK_SPEED : 0;\n    }\n  }, {\n    key: \"onJump\",\n    value: function onJump() {\n      if (this.onGround && !this.isMovementFrozen()) {\n        this.velocity.y = JUMP_VELOCITY;\n        this.setAnimation('in_air');\n      }\n    }\n  }, {\n    key: \"onReturnToGround\",\n    value: function onReturnToGround() {\n      this.updateMovementAnimation();\n\n      _get(_getPrototypeOf(Player.prototype), \"onReturnToGround\", this).call(this);\n    }\n  }, {\n    key: \"updateMovementAnimation\",\n    value: function updateMovementAnimation() {\n      if (!this.onGround) {\n        this.setAnimation('in_air');\n      } else if (Object.values(this.keyState).some(function (k) {\n        return k;\n      })) {\n        this.setAnimation('walking');\n      } else if (this.isDead) {\n        this.setAnimation('dead_ground');\n      } else {\n        this.setAnimation('standing');\n      }\n    }\n  }, {\n    key: \"stepMovement\",\n    value: function stepMovement(deltaTime) {\n      _get(_getPrototypeOf(Player.prototype), \"stepMovement\", this).call(this, deltaTime);\n\n      this.updateMovementAnimation(); // Set direction based on x-velocity.  If velocity is 0, leave direction alone (preserving the previous direction)\n\n      if (this.velocity.x < 0) {\n        this.direction = directions.left;\n      } else if (this.velocity.x > 0) {\n        this.direction = directions.right;\n      }\n    }\n  }, {\n    key: \"step\",\n    value: function step(deltaTime) {\n      _get(_getPrototypeOf(Player.prototype), \"step\", this).call(this, deltaTime); //Prevent walking outside of level\n\n\n      this.position.z = Math.max(this.level.minZ, Math.min(this.level.maxZ, this.position.z)); //Prevent backtracking behind camera\n\n      this.position.x = Math.max(this.camera.position.x + this.camera.screenLeftEdge, this.position.x); //Prevent walking past camera\n\n      this.position.x = Math.min(this.camera.position.x + this.camera.screenRightEdge, this.position.x);\n    }\n  }, {\n    key: \"jumpKick\",\n    value: function jumpKick() {\n      if (!this.isMovementFrozen() && !this.inFreefall()) {\n        this.setAnimation('jump_kick');\n        this.setFreefall({\n          x: this.direction === directions.right ? JUMP_KICK_XVEL : -JUMP_KICK_XVEL,\n          y: -2,\n          z: 0\n        }, 1);\n      }\n    }\n  }, {\n    key: \"onAttack\",\n    value: function onAttack() {\n      if (!this.onGround) {\n        this.jumpKick();\n      } else {\n        var attackAnimation = this.attackCount % 2 === 0 ? 'attack1' : 'attack2';\n        this.attack(attackAnimation, 80);\n        this.attackCount += 1;\n      }\n    }\n  }]);\n\n  return Player;\n}(GameCharacter), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"spriteScale\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '870px';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"screenHeight\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 132;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"screenWidth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 68;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"collisionWidth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 64;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"collisionHeight\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 80;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"collisionBottom\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 20;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"collisionDepth\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 30;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"courage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return STARTING_COURAGE;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"onRight\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onRight\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"offRight\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"offRight\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onLeft\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onLeft\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"offLeft\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"offLeft\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onUp\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onUp\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"offUp\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"offUp\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onDown\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onDown\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"offDown\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"offDown\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onJump\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onJump\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onReturnToGround\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onReturnToGround\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateMovementAnimation\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateMovementAnimation\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"stepMovement\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"stepMovement\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"step\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"step\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"jumpKick\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"jumpKick\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"onAttack\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"onAttack\"), _class.prototype)), _class);\nexport default Player;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Crane/Capstone-Crane/src/state/Player.js"],"names":["GameCharacter","GameObjectTypes","action","observable","directions","WALK_SPEED","JUMP_VELOCITY","JUMP_KICK_XVEL","STARTING_COURAGE","Player","props","type","keyState","up","down","left","right","attackCount","commonAnimationTracks","standing","frames","x","y","duration","walking","in_air","loopStartFrame","introDuration","take_damage","jump_kick","width","dead","dead_ground","playerNumber","setAnimation","velocity","z","onGround","isMovementFrozen","updateMovementAnimation","Object","values","some","k","isDead","deltaTime","direction","position","Math","max","level","minZ","min","maxZ","camera","screenLeftEdge","screenRightEdge","inFreefall","setFreefall","jumpKick","attackAnimation","attack"],"mappings":"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","sourcesContent":["import GameCharacter from './GameCharacter'\r\nimport GameObjectTypes from '../shared/enum/GameObjectTypes'\r\nimport { action, observable } from 'mobx'\r\nimport directions from '../shared/enum/directions'\r\n\r\nconst WALK_SPEED = 3\r\nconst JUMP_VELOCITY = 17\r\nconst JUMP_KICK_XVEL = 8\r\n\r\nconst STARTING_COURAGE = 12\r\n\r\nclass Player extends GameCharacter {\r\n\r\n  type = GameObjectTypes.Player\r\n  keyState = {\r\n    up: false,\r\n    down: false,\r\n    left: false,\r\n    right: false,\r\n  }\r\n  attackCount = 0\r\n\r\n  commonAnimationTracks = {\r\n    standing: {\r\n      frames: [{ x: 15, y: 0 }],\r\n      duration: 1000,\r\n    },\r\n    walking: {\r\n      frames: [\r\n        { x: 216, y: 0 }, \r\n        { x: 280, y: 0 },\r\n        { x: 216, y: 0 },\r\n        { x: 154, y: 0 }\r\n      ],\r\n      duration: 600,\r\n    },\r\n    in_air: {\r\n      frames: [\r\n        { x: 358, y: 0 }, \r\n        { x: 432, y: 0 }, \r\n        { x: 500, y: 0 },\r\n        { x: 580, y: 0 },\r\n        { x: 655, y: 0 }\r\n      ],\r\n      loopStartFrame: 1,\r\n      introDuration: 200,\r\n      duration: 400,\r\n    },\r\n    take_damage: {\r\n      frames: [{ x: 25, y: 300 }],\r\n      duration: 1000,\r\n    },\r\n    jump_kick: {\r\n      frames: [{ x: 740, y: 0, width: 120 }],\r\n      duration: 1000,\r\n    },\r\n    dead: {\r\n      frames: [{ x: 105, y: 300, width: 80 }],\r\n      duration: 1000,\r\n    },\r\n    dead_ground: {\r\n      frames: [{ x: 180, y: 290 }],\r\n      duration: 1000,\r\n    }\r\n  }\r\n\r\n  @observable \r\n  spriteScale = '870px'\r\n\r\n  @observable\r\n  screenHeight = 132\r\n\r\n  @observable\r\n  screenWidth = 68\r\n\r\n  @observable\r\n  collisionWidth = 64\r\n\r\n  @observable\r\n  collisionHeight = 80\r\n\r\n  @observable\r\n  collisionBottom = 20\r\n\r\n  @observable\r\n  collisionDepth = 30\r\n\r\n  @observable\r\n  courage = STARTING_COURAGE\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.playerNumber = props.playerNumber\r\n    this.setAnimation( 'standing' )\r\n  }\r\n\r\n  @action\r\n  onRight() {\r\n    this.keyState.right = true\r\n    this.velocity.x = WALK_SPEED\r\n  }\r\n\r\n  @action\r\n  offRight() {\r\n    this.keyState.right = false\r\n    this.velocity.x = this.keyState.left ? -WALK_SPEED : 0\r\n  }\r\n\r\n  @action\r\n  onLeft() {\r\n    this.keyState.left = true\r\n    this.velocity.x = -WALK_SPEED\r\n  }\r\n\r\n  @action\r\n  offLeft() {\r\n    this.keyState.left = false\r\n    this.velocity.x = this.keyState.right ? WALK_SPEED : 0\r\n  }\r\n\r\n  @action\r\n  onUp() {\r\n    this.keyState.up = true\r\n    this.velocity.z = WALK_SPEED\r\n  }\r\n\r\n  @action\r\n  offUp() {\r\n    this.keyState.up = false\r\n    this.velocity.z = this.keyState.down ? -WALK_SPEED : 0\r\n  }\r\n\r\n  @action\r\n  onDown() {\r\n    this.keyState.down = true\r\n    this.velocity.z = -WALK_SPEED\r\n  }\r\n\r\n  @action\r\n  offDown() {\r\n    this.keyState.down = false\r\n    this.velocity.z = this.keyState.up ? WALK_SPEED : 0\r\n  }\r\n\r\n  @action\r\n  onJump() {\r\n    if ( this.onGround && !this.isMovementFrozen() ) {\r\n      this.velocity.y = JUMP_VELOCITY\r\n      this.setAnimation( 'in_air' )\r\n    }\r\n  }\r\n\r\n  @action\r\n  onReturnToGround() {\r\n    this.updateMovementAnimation()\r\n    super.onReturnToGround()\r\n  }\r\n\r\n  @action\r\n  updateMovementAnimation() {\r\n    if ( !this.onGround ) {\r\n      this.setAnimation( 'in_air' )\r\n    }\r\n    else if ( Object.values(this.keyState).some( k => k )) {\r\n      this.setAnimation( 'walking' )\r\n    }\r\n    else if ( this.isDead ) {\r\n      this.setAnimation( 'dead_ground' ) \r\n    }\r\n    else {\r\n      this.setAnimation( 'standing' ) \r\n    }\r\n  }\r\n\r\n  @action\r\n  stepMovement( deltaTime ) {\r\n    super.stepMovement( deltaTime )\r\n\r\n    this.updateMovementAnimation()\r\n\r\n    // Set direction based on x-velocity.  If velocity is 0, leave direction alone (preserving the previous direction)\r\n    if ( this.velocity.x < 0 ) {\r\n      this.direction = directions.left\r\n    }\r\n    else if ( this.velocity.x > 0 ) {\r\n      this.direction = directions.right\r\n    }\r\n  }\r\n\r\n  @action\r\n  step( deltaTime ) {\r\n    super.step( deltaTime )\r\n    \r\n    //Prevent walking outside of level\r\n    this.position.z = Math.max( this.level.minZ, Math.min( this.level.maxZ, this.position.z ))\r\n\r\n    //Prevent backtracking behind camera\r\n    this.position.x = Math.max( this.camera.position.x + this.camera.screenLeftEdge, this.position.x )\r\n\r\n    //Prevent walking past camera\r\n    this.position.x = Math.min( this.camera.position.x + this.camera.screenRightEdge, this.position.x )\r\n  }\r\n\r\n  @action\r\n  jumpKick() {\r\n    if ( !this.isMovementFrozen() && !this.inFreefall()) {\r\n      this.setAnimation('jump_kick')\r\n      this.setFreefall({\r\n        x: this.direction === directions.right ? JUMP_KICK_XVEL : -JUMP_KICK_XVEL,\r\n        y: -2,\r\n        z: 0\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  @action\r\n  onAttack() {\r\n    if ( !this.onGround ) {\r\n      this.jumpKick()\r\n    }\r\n    else {\r\n      const attackAnimation = this.attackCount % 2 === 0 ? 'attack1' : 'attack2'\r\n      this.attack( attackAnimation, 80 )\r\n      this.attackCount += 1\r\n    }\r\n  }\r\n}\r\n\r\nexport default Player"]},"metadata":{},"sourceType":"module"}