{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Crane\\\\Capstone-Crane\\\\src\\\\components\\\\PlayerSelectScreen.js\";\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './PlayerSelectScreen.scss';\nimport { inject, observer } from 'mobx-react';\nimport classnames from 'classnames';\nimport PlayerTypes from '../shared/enum/PlayerTypes';\nvar NEXT_DELAY = 2200;\nvar PlayerSelectScreen = (_dec = inject('playerSelection'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(PlayerSelectScreen, _React$Component);\n\n  function PlayerSelectScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayerSelectScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayerSelectScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentlySelectingFor: 0,\n      canSelect: true\n    };\n\n    _this.selectPlayerType = function (playerType) {\n      _this.props.playerSelection.selectPlayer(playerType);\n\n      _this.setState({\n        canSelect: false\n      });\n\n      var hasSelectedAllPlayers = _this.props.playerSelection.hasSelectedAllPlayers;\n      _this.nextTimeout = setTimeout(hasSelectedAllPlayers ? _this.gotoGame : _this.beginSelectingNextPlayer, NEXT_DELAY);\n    };\n\n    _this.gotoGame = function () {\n      _this.props.history.push('/game');\n    };\n\n    _this.beginSelectingNextPlayer = function () {\n      _this.setState({\n        canSelect: true,\n        currentlySelectingFor: _this.state.currentlySelectingFor + 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayerSelectScreen, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.nextTimeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentlySelectingFor = _this$state.currentlySelectingFor,\n          canSelect = _this$state.canSelect;\n      var selectedPlayerTypes = this.props.playerSelection.selectedPlayerTypes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames('PlayerSelectScreen', {\n          canSelect: canSelect\n        })\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instructions\"\n      }, \"Selina or Grayson\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"player-types\"\n      }, Object.values(PlayerTypes).map(function (playerType) {\n        var selected = selectedPlayerTypes[currentlySelectingFor] === playerType;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classnames('player-type', {\n            selected: selected\n          }),\n          onClick: function onClick() {\n            return _this2.selectPlayerType(playerType);\n          },\n          key: playerType\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"player-image\",\n          src: \"/assets/images/ui/\".concat(playerType, \"_player_select.png\"),\n          alt: playerType\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"indicator\",\n          src: \"/assets/images/ui/select_indicator_\".concat(currentlySelectingFor, \".png\"),\n          alt: \"\"\n        }));\n      })));\n    }\n  }]);\n\n  return PlayerSelectScreen;\n}(React.Component), _temp)) || _class) || _class);\nexport default withRouter(PlayerSelectScreen);","map":{"version":3,"sources":["C:/Users/Admin/Documents/Crane/Capstone-Crane/src/components/PlayerSelectScreen.js"],"names":["React","withRouter","inject","observer","classnames","PlayerTypes","NEXT_DELAY","PlayerSelectScreen","state","currentlySelectingFor","canSelect","selectPlayerType","playerType","props","playerSelection","selectPlayer","setState","hasSelectedAllPlayers","nextTimeout","setTimeout","gotoGame","beginSelectingNextPlayer","history","push","clearTimeout","selectedPlayerTypes","Object","values","map","selected","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,2BAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,IAAMC,UAAU,GAAG,IAAnB;IAIMC,kB,WAFLL,MAAM,CAAE,iBAAF,C,gBACNC,Q;;;;;;;;;;;;;;;UAGCK,K,GAAQ;AACNC,MAAAA,qBAAqB,EAAE,CADjB;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UASRC,gB,GAAmB,UAAAC,UAAU,EAAI;AAC/B,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,YAA3B,CAAyCH,UAAzC;;AACA,YAAKI,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAF+B,UAIvBO,qBAJuB,GAIG,MAAKJ,KAAL,CAAWC,eAJd,CAIvBG,qBAJuB;AAM/B,YAAKC,WAAL,GAAmBC,UAAU,CAC3BF,qBAAqB,GAAG,MAAKG,QAAR,GAAmB,MAAKC,wBADlB,EAE3Bf,UAF2B,CAA7B;AAID,K;;UAEDc,Q,GAAW,YAAM;AACf,YAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD,K;;UAEDF,wB,GAA2B,YAAM;AAC/B,YAAKL,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE,IADC;AAEZD,QAAAA,qBAAqB,EAAE,MAAKD,KAAL,CAAWC,qBAAX,GAAmC;AAF9C,OAAd;AAID,K;;;;;;;2CAzBsB;AACrBe,MAAAA,YAAY,CAAE,KAAKN,WAAP,CAAZ;AACD;;;6BAyBQ;AAAA;;AAAA,wBAIH,KAAKV,KAJF;AAAA,UAELC,qBAFK,eAELA,qBAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAAA,UAMCe,mBAND,GAMyB,KAAKZ,KAAL,CAAWC,eANpC,CAMCW,mBAND;AAQP,0BACE;AAAK,QAAA,SAAS,EAAErB,UAAU,CAAC,oBAAD,EAAuB;AAAEM,UAAAA,SAAS,EAATA;AAAF,SAAvB;AAA1B,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,6BADF,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGgB,MAAM,CAACC,MAAP,CAAetB,WAAf,EAA6BuB,GAA7B,CAAkC,UAAAhB,UAAU,EAAI;AAC/C,YAAMiB,QAAQ,GAAGJ,mBAAmB,CAAEhB,qBAAF,CAAnB,KAAiDG,UAAlE;AAEA,4BACE;AACE,UAAA,SAAS,EAAER,UAAU,CAAC,aAAD,EAAgB;AAAEyB,YAAAA,QAAQ,EAARA;AAAF,WAAhB,CADvB;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAClB,gBAAL,CAAuBC,UAAvB,CAAN;AAAA,WAFX;AAGE,UAAA,GAAG,EAAEA;AAHP,wBAKE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,GAAG,8BAAwBA,UAAxB,uBAFL;AAGE,UAAA,GAAG,EAAEA;AAHP,UALF,eAUE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,GAAG,+CAAyCH,qBAAzC,SAFL;AAGE,UAAA,GAAG,EAAC;AAHN,UAVF,CADF;AAkBD,OArBA,CADH,CAHF,CADF;AA8BD;;;;EAxE8BT,KAAK,CAAC8B,S;AA2EvC,eAAe7B,UAAU,CAAEM,kBAAF,CAAzB","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport './PlayerSelectScreen.scss'\r\nimport { inject, observer } from 'mobx-react'\r\nimport classnames from 'classnames'\r\nimport PlayerTypes from '../shared/enum/PlayerTypes'\r\n\r\nconst NEXT_DELAY = 2200\r\n\r\n@inject( 'playerSelection' )\r\n@observer\r\nclass PlayerSelectScreen extends React.Component {\r\n\r\n  state = {\r\n    currentlySelectingFor: 0,\r\n    canSelect: true,\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout( this.nextTimeout )\r\n  }\r\n\r\n  selectPlayerType = playerType => {\r\n    this.props.playerSelection.selectPlayer( playerType )\r\n    this.setState({ canSelect: false })\r\n\r\n    const { hasSelectedAllPlayers } = this.props.playerSelection\r\n\r\n    this.nextTimeout = setTimeout(\r\n      hasSelectedAllPlayers ? this.gotoGame : this.beginSelectingNextPlayer,\r\n      NEXT_DELAY\r\n    )\r\n  }\r\n\r\n  gotoGame = () => {\r\n    this.props.history.push('/game')\r\n  }\r\n\r\n  beginSelectingNextPlayer = () => {\r\n    this.setState({\r\n      canSelect: true,\r\n      currentlySelectingFor: this.state.currentlySelectingFor + 1\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentlySelectingFor,\r\n      canSelect,\r\n    } = this.state\r\n\r\n    const { selectedPlayerTypes } = this.props.playerSelection\r\n    \r\n    return (\r\n      <div className={classnames('PlayerSelectScreen', { canSelect })}>\r\n        <div className='instructions'>Selina or Grayson</div>\r\n\r\n        <div className='player-types'>\r\n          {Object.values( PlayerTypes ).map( playerType => {\r\n            const selected = selectedPlayerTypes[ currentlySelectingFor ] === playerType\r\n\r\n            return (\r\n              <div\r\n                className={classnames('player-type', { selected })}\r\n                onClick={() => this.selectPlayerType( playerType )}\r\n                key={playerType}\r\n              >\r\n                <img\r\n                  className='player-image'\r\n                  src={`/assets/images/ui/${ playerType }_player_select.png`}\r\n                  alt={playerType}\r\n                />\r\n                <img\r\n                  className='indicator'\r\n                  src={`/assets/images/ui/select_indicator_${ currentlySelectingFor }.png`}\r\n                  alt=''\r\n                />\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter( PlayerSelectScreen )"]},"metadata":{},"sourceType":"module"}